#
# milestone.py
#
# TextModel project!
#
# Name: Luis Beltran
#

import math

class TextModel():
    """ serves as a blueprint for objects that model a body of text """
    
    def __init__(self, model_name):
        """ constructs a new TextModel object by accepting a sring model_name as a parameter and initializing the following three attributes"""
        self.name = model_name
        self.words = {}
        self.word_lengths = {}
        self.stems = {}
        self.sentence_lengths = {}
        self.punctuation_counter = {}
    def __repr__(self):
        """ returns a string that includes the name of the model as well as thesizes of the dictionaries for each feature of the text"""
        s = 'text model name: ' + self.name + '\n'
        s += 'number of words: ' + str(len(self.words)) + '\n'
        s += 'number of word lengths: ' + str(len(self.word_lengths)) + '\n'
        s += 'number of stems: ' + str(len(self.stems)) + '\n'
        s += 'number of sentence lengths: ' + str(len(self.sentence_lengths)) + '\n'
        s += 'number of different punctuations: ' + str(len(self.punctuation_counter))
        return s
    def add_string(self, s):
        """ adds a string of text (s) to the model by augmenting the featuredictionaries defined in the constructor"""
        sentence = s.split()
        start = 0
        num_words = 0
        for i in range(len(sentence)):
            if sentence[i][-1] == '.' or sentence[i][-1] == '!' or sentence[i][-1] == '?':
                num_words = (i+1) - start
                start = i + 1
                if num_words not in self.sentence_lengths:
                    self.sentence_lengths[num_words] = 1
                else:
                    self.sentence_lengths[num_words] += 1
                    
        wordlist = s.split()
        for w in wordlist:
            if w[-1] not in 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ':
                if w[-1] not in self.punctuation_counter:
                    self.punctuation_counter[w[-1]] = 1
                else:
                    self.punctuation_counter[w[-1]] +=1

